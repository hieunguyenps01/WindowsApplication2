<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAaWlpN2lpaYtpaWnCaWlpzGlpacxoaGi8VlZWnWlpaSYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABpaWkMW1tbpE9PT+6srKzR3t7ezOLi4szS0tLQT09P9TY2Nv9DQ0P0VlZWj2lp
        aQIAAAAAAAAAAAAAAABpaWkMWFhYvTs7O/xCQkL709PT0eXl5czk5OTM4uLizF9fX/E2Njb/NjY2/zc3
        N/5XV1emAAAAAAAAAAAAAAAAYmJijTk5Of02Njb/qKio3Ojo6Mzn5+fM5eXlzOTk5MzMzMzRPj4+/DY2
        Nv82Njb/cXFx3mlpaV4AAAAAaWlpLmtra9s7Ozv9dHR06+zs7Mzq6urM6OjozOfn58zl5eXM5OTkzMfH
        x9O4uLjWp6en2rW1tdNpaWnCaWlpDmlpaXivr6/Q5eXlzu/v78zt7e3M7OzszOrq6szo6OjM5+fnzOXl
        5czk5OTM4uLizOHh4czf39/MmZmZzGlpaVRpaWmv4ODgzPLy8szw8PDM7+/vzO3t7czs7OzM6urqzOjo
        6Mzn5+fM5eXlzOTk5Mzi4uLM4eHhzLe3t8xpaWmGaWlpx/Ly8szz8/PM8vLyzPDw8MxqamruVVVV9VVV
        VfVhYWHx5eXlzefn58zl5eXM5OTkzOLi4syoqKjUXl5eqmdnZ8jV1dXT9fX1zPPz88zt7e3NNzc3/jY2
        Nv82Njb/NjY2/5+fn9/o6OjM5+fnzOXl5czk5OTMUlJS80FBQeBoaGire3t76Pb29sz19fXMxsbG1jY2
        Nv82Njb/NjY2/zY2Nv9LS0v45+fnzejo6Mzn5+fMpKSk3DY2Nv9ISEi+aWlpbmpqaujHx8fX9vb2zMrK
        ytZAQED7NjY2/zY2Nv82Njb/YGBg8eHh4c7q6urM6OjozFtbW/I3Nzf+VlZWYmlpaSRlZWXOjY2N5fj4
        +Mz29vbM5eXl0Hh4eOs2Njb/e3t76ezs7M3t7e3M7OzszOrq6sxbW1vxUVFR1mlpaQoAAAAAaWlpdpub
        m9H5+fnM+Pj4zPb29sz19fXM3t7e0fLy8szw8PDM7+/vzO3t7czp6enMjo6O0WlpaU8AAAAAAAAAAGlp
        aQVpaWmaqKiozPf398z4+PjM9vb2zPX19czz8/PM8vLyzPDw8MzLy8vMk5OTzGlpaXMAAAAAAAAAAAAA
        AAAAAAAAaWlpBWlpaXaEhITMvLy8zNvb28z29vbM8PDwzNbW1sytra3MaWlpu2lpaUEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAaWlpJmlpaXZpaWmjaWlpzGlpacVpaWmhaWlpamlpaREAAAAAAAAAAAAA
        AAAAAAAA8A8AAMADAACAAwAAgAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAIAD
        AADABwAA8A8AAA==
</value>
  </data>
</root>